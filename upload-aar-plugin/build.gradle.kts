import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`

    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.6.0"
    id("maven-publish")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
    google()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.android.tools.build:gradle:4.0.2")
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10")
    implementation("org.jetbrains.kotlin:kotlin-android-extensions:1.3.30")
}

gradlePlugin {
    // Define the plugin
    val plugin by plugins.creating {
        id = "kevin.upload"
        implementationClass = "com.kevin.study.AarUploadPlugin"
    }
}

// 配置上传源码
java {
    withSourcesJar()
}

val verCode = "1.0.0-LOCAL"

publishing {
    publications {
        create<MavenPublication>("aarUploader"){
            groupId = "com.kevin.plugin" // 打出来的包的前缀
            artifactId = "aar-uploader" // 打出来的包的名称
            version = verCode // 版本
            from(components["java"]) // 表示是java组件
        }
    }

    // 如果有自己的仓库则开放这个
    /*repositories {
        maven {
            // 仓库名称，这个会显示在task中
            name = "custom"
            //允许使用 http
            isAllowInsecureProtocol = true
            // 仓库的url
            if (verCode.endsWith("-LOCAL")) {
                url = uri("/Users/kevinlee/Downloads/repo/LOCAL")
            } else if (verCode.endsWith("-SNAPSHOT")) {
                url = uri("/Users/kevinlee/Downloads/repo/SNAPSHOT")
            }
            // 配置私有maven的上传账号信息
            credentials {
                username = "userName"
                password = "passWord"
            }
        }
    }*/
}

val compileKotlin: KotlinCompile by tasks
compileKotlin.kotlinOptions {
    jvmTarget = "1.8"
}
val compileTestKotlin: KotlinCompile by tasks
compileTestKotlin.kotlinOptions {
    jvmTarget = "1.8"
}